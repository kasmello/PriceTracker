{"version":3,"sources":["components/api_fetcher.js","components/category_radio_buttons.js","components/time_radio_buttons.js","components/timeseries.js","components/data_table.js","components/fuelview.js","components/welcome_page.js","components/misc_pages.js","components/header.js","App.js","reportWebVitals.js","index.js"],"names":["ApiContext","createContext","ChangeDateMode","ChangeProduct","GraphContext","EditPlaceSelect","editPlaceSelect","useContext","neo4j","require","driver","process","auth","basic","ApiProvider","_ref","children","dataMode","dataView","_useState","useState","_useState2","Object","slicedToArray","dateMode","setDateMode","_useState3","_useState4","product","setProduct","_useState5","_useState6","fuelprices","setPrices","_useState7","_useState8","graphData","_useState9","_useState10","placeSelect","setPlaceSelect","getDate","num","date","Date","setDate","day","month","getMonth","year","getFullYear","concat","fetchFuels","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","link","session","result","wrap","_context","prev","next","sent","run","records","map","record","newRecord","toObject","parseFloat","close","stop","_x","apply","this","arguments","useEffect","console","log","addressList","forEach","address","linkGeneratorGraph","dateStr","sign","linkGenerator","react_default","a","createElement","Provider","value","item","length","undefined","ChooseMultiCategory","updateCat","FormControl","className","FormLabel","id","RadioGroup","row","aria-labelledby","name","defaultValue","onChange","e","FormControlLabel","control","Radio","label","ChooseMultiTime","updateDateMode","Chart","Fragment","customTheme","createTheme","overrides","MUIDataTableFilter","root","minWidth","MUIDataTableFilterList","chip","marginRight","columns","selected","options","filter","sort","display","customBodyRender","tableMeta","Checkbox","selectedRows","changePlaceSelect","setSelectedRows","selectableRows","download","search","print","viewColumns","rowsSelected","selectToolbarPlacement","customToolbarSelect","onRowSelectionChange","currSelectedRow","allSelectedRows","allRowIndexes","placeIndex","push","dataIndex","draggableColumns","enabled","DataTable","props","ThemeProvider","theme","dist_default","data","ToggleView","ref","headerRef","window","scrollTo","top","current","offsetTop","left","behaviour","changeOrGetSelected","time_radio_buttons","category_radio_buttons","changeOrGetDataView","data_table","timeseries","Col","onClick","alert","style","WelcomePage","PageNotFound","About","Navbar","react_router_dom","to","App","document","title","dataview","setDataView","selectedEnable","useRef","header","react_router","exact","path","element","welcome_page","fuelview","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","rel","href","integrity","crossOrigin","src_App"],"mappings":"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","file":"static/js/main.2c92a6da.chunk.js","sourcesContent":["//use function with usestate/useeffect hook\nimport React, { useState, createContext, useContext, useEffect } from 'react';\nimport { parseDate } from \"fusioncharts/utils\" \n\nconst ApiContext = createContext(); \nconst ChangeDateMode = createContext();\nconst ChangeProduct = createContext()\nconst GraphContext = createContext()\nconst EditPlaceSelect = createContext();\n\n\nfunction useApiContext() {\n    return useContext(ApiContext)\n}\n\nfunction changeDateMode(){\n    return useContext(ChangeDateMode)\n}\n\nfunction changeProduct(){\n    return useContext(ChangeProduct)\n}\n\n\nfunction useGraphContext() {\n    return useContext(GraphContext)\n}\n\n\n\nfunction editPlaceSelect() {\n    return useContext(EditPlaceSelect)\n}\n\nconst neo4j = require(\"neo4j-driver\");\nconst uri = process.env.REACT_APP_URI\nconst usr = process.env.REACT_APP_USR\nconst password = process.env.REACT_APP_PASSWORD\nconst driver = neo4j.driver(uri, neo4j.auth.basic(usr, password));\n\n\n\nfunction ApiProvider({ children, dataMode, dataView }) {\n    const [dateMode, setDateMode] = useState('tdy');\n    const [product, setProduct] = useState('UnleadedPetrol')\n    const [fuelprices, setPrices] = useState([]);\n    const [graphData, setGraphData] = useState([]);\n    const [placeSelect, setPlaceSelect] = useState([]);\n    \n    const getDate = (num) => {\n        const date = new Date();\n        date.setDate(date.getDate()-num);\n        const day = date.getDate();\n        const month = date.getMonth() + 1;\n        const year = date.getFullYear();\n        return `${year}-${month}-${day}`\n        \n    }\n\n    const linkGeneratorPlace = () => {\n        return `MATCH (b:Brand)-->(p:Place)<--(l:Location)\n        RETURN b.brand AS brand,p.address AS address,l.location AS location`\n\n    }\n\n    const linkGeneratorGraph = (addressList, product) => {\n        addressList.forEach((address) => {\n            return `MATCH (b:Brand)-->(p:Place)<--(l:Location)\n            WHERE p.address = '${address}'\n            MATCH (d:DATE_${product})-[pr:PRICED_AT]->(p:Place)\n            RETURN b.brand AS brand,l.location AS location\n            ,pr.price AS price,d.date AS date`\n        })\n        \n    }\n\n\n    const linkGenerator = (dateStr,product) => {\n        // date can be tdy, tmr, or all\n        //product is 98ERON, E85, UnleadedPetrol\n        var date = ''\n        var sign = '='\n        switch (dateStr) {\n            case 'tdy':\n                date = getDate(0);\n                break;\n            case 'tmr':\n                date = getDate(-1);\n                break;\n            default:\n                date=getDate(30);\n                sign = '>'\n        };\n        console.log(`Date: ${date}`)\n        return `MATCH (d:DATE_${product})-[pr:PRICED_AT]->(p:Place)\n        WHERE d.date ${sign} '${date}'\n        MATCH (b:Brand)-->(p:Place)<--(l:Location)\n        RETURN b.brand AS brand,p.address AS address,p.phone AS phone,p.description AS description,l.location AS location\n        ,pr.price AS price,d.date AS date`\n\n    }\n\n    const changePlaceSelect = (item=null) => {\n        if (item !== null) {\n            setPlaceSelect(item)\n        }\n        return placeSelect\n    }\n\n\n    const fetchFuels = async (link) => {\n        const session = await driver.session();\n        const result = await session.run(link)\n        await setPrices(result.records.map(record => {\n            var newRecord = record.toObject()\n            newRecord['price'] = parseFloat(newRecord['price'])\n            return newRecord\n        }))\n        await session.close()\n    };\n\n    const getPlaceLink = (num) => {\n        const place_string = (`http://127.0.0.1:8000/api/price/address_id=${num}/`)\n        console.log(`Fetching from ${place_string}`)\n        return place_string\n    }\n\n    const fetchPlacePrices = async () => {\n        const getAllPrices = () => {\n            return Promise.all(placeSelect.map(num => {\n                return fetch(getPlaceLink(num))\n                .then(response => response.json())\n            })) \n        }\n        var x = await getAllPrices()\n        var final_array = []\n        x.forEach(company => {\n            company.forEach(row => {\n                final_array.push([parseDate(row.date, '%Y-%m-%d'), (`${row.brand} - ${row.address}`), row.price])\n            })\n        })\n        console.log(final_array)\n        setGraphData(final_array)\n\n    };\n    \n\n    // fetchFuels(1);\n    useEffect(() => {\n        console.log('Data Reloaded')\n        if (dataView==='graph') {\n            fetchFuels(linkGeneratorGraph(placeSelect,))\n        } else if (dataMode==='multiple') {\n            fetchFuels(linkGeneratorPlace())\n        } else{\n            fetchFuels(linkGenerator(dateMode,product))\n        }\n        // then(link => fetchFuels(link))\n       \n    },[dataMode,product,dateMode, dataView]); //acts as component did mount, only executes once on launch\n\n    \n    return (\n        <ApiContext.Provider value = { fuelprices }>\n        <ChangeDateMode.Provider value = { setDateMode }>\n        <ChangeProduct.Provider value = { setProduct }>\n        <GraphContext.Provider value = {graphData}>\n        <EditPlaceSelect.Provider value={changePlaceSelect}>\n            { children }\n        </EditPlaceSelect.Provider>\n        </GraphContext.Provider>\n        </ChangeProduct.Provider>\n        </ChangeDateMode.Provider>\n        </ApiContext.Provider>\n    );\n\n}\n\n\n  export { ApiProvider, useApiContext, changeDateMode, changeProduct, useGraphContext, editPlaceSelect }\n","import React from 'react';\nimport { changeProduct } from './api_fetcher';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nfunction ChooseMultiCategory() {\n    const updateCat = changeProduct();\n    const changeFilter = (product) => {\n        updateCat(product);\n    }\n    return (\n        <FormControl className='catRadio'>\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">Petrol type to filter by</FormLabel>\n            <RadioGroup\n                row\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                name=\"row-radio-buttons-group\"\n                defaultValue='UnleadedPetrol'\n                onChange={(e,value) => changeFilter(value)}\n            >\n                <FormControlLabel value=\"UnleadedPetrol\" control={<Radio />} label=\"Unleaded Petrol\" />\n                <FormControlLabel value=\"E85\" control={<Radio />} label=\"E85\" />\n                <FormControlLabel value=\"98RON\" control={<Radio />} label=\"98 RON\" />\n            </RadioGroup>\n        </FormControl>\n    )\n}\n\nexport default ChooseMultiCategory","import React from 'react';\nimport { changeDateMode } from './api_fetcher';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nfunction ChooseMultiTime() {\n    const updateDateMode = changeDateMode();\n    const changeFilter = (filter) => {\n        updateDateMode(filter);\n    }\n\n    return (\n        <div className='timeRadio'>\n        <FormControl>\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">Choose which data to view</FormLabel>\n            <RadioGroup\n                row\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                defaultValue='tdy'\n                name=\"row-radio-buttons-group\"\n                onChange={(e,value) => changeFilter(value)}\n            >\n                <FormControlLabel value={'tdy'} control={<Radio />} label=\"Today\" />\n                <FormControlLabel value={'tmr'} control={<Radio />} label=\"Tomorrow\" />\n            </RadioGroup>\n        </FormControl>\n        </div>\n    )\n}\n\nexport default ChooseMultiTime","import React from \"react\";\n\nimport { useGraphContext } from './api_fetcher.js'\n\n\nfunction Chart() {\n  \n    return (\n        <></>\n    )\n}\n\n\nexport default Chart;","import React, { useState, useEffect } from \"react\"\nimport MUIDataTable from \"mui-datatables\";\nimport { editPlaceSelect, useApiContext } from \"./api_fetcher\";\nimport { styled, createTheme, ThemeProvider } from \"@mui/material\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\n\nconst customTheme = createTheme({\n  overrides: {\n    MUIDataTableFilter: {\n      root: {\n        minWidth: '20vw',  // Adjust the width as needed\n      },\n    },\n    MUIDataTableFilterList: {\n      chip: {\n        marginRight: '8px',  // Adjust the margin as needed\n      },\n    },\n  },\n});\n\nconst columns = (selected) => {\n  return ([\n    {\n      name: \"brand\",\n      label: \"Brand\",\n      options: {\n      filter: true,\n      sort: true,\n      }\n    },\n    {\n      name: \"date\",\n      label: \"Date\",\n      options: {\n      display: false,\n      filter: false,\n      sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n      filter: false,\n      sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n      filter: true,\n      sort: true,\n      }\n    },\n    {\n      name: \"price\",\n      label: \"Price\",\n      options: {\n      display: (selected === 'none' ? true : false),\n      filter: false,\n      sort: true,\n      customBodyRender: value => <span>{value}c/L</span>\n      }\n    },\n    {\n      name: \"description\",\n      label: \"Description\",\n      options: {\n      display: (selected === 'none' ? true : false),\n      filter: false,\n      sort: false,\n      }\n    },\n    {\n      name: \"product\",\n      label: \"Fuel Type\",\n      options: {\n      display: (selected === 'none' ? false : true),\n      filter: false,\n      sort: false,\n      customBodyRender: (value, tableMeta) => {\n        return(\n        <div>\n          <FormControlLabel control={\n          <Checkbox />\n          } label=\"Unleaded Petrol\" />\n          <FormControlLabel control={\n          <Checkbox />\n          } label=\"E85\" />\n          <FormControlLabel control={\n          <Checkbox />\n          } label=\"98 RON\" />\n        </div>\n        )\n      }\n      \n      }\n    },\n  ])};\n\nconst options = (selected, selectedRows,fuelprices,changePlaceSelect, setSelectedRows) => {\n  return ({\n  selectableRows: selected, \n  download: false,\n  search: true,\n  print: false, \n  viewColumns: false,\n  filter: true,\n  rowsSelected: selectedRows,\n  selectToolbarPlacement: 'above',\n  customToolbarSelect: () => {},\n  onRowSelectionChange: (currSelectedRow,allSelectedRows,allRowIndexes) => {\n    var placeIndex = []\n    setSelectedRows(allSelectedRows.map(row => {\n      placeIndex.push(fuelprices[row.dataIndex].address)\n      return row.dataIndex\n    }));\n    changePlaceSelect(placeIndex)\n  },\n  draggableColumns: {\n    enabled: true,\n  },\n  })}\n\nfunction DataTable(props) {\n  const fuelprices = useApiContext()\n  const [selectedRows, setSelectedRows] = useState([]);\n  const changePlaceSelect = editPlaceSelect();\n\n  // useEffect(() => {\n  //   console.log('Table reloaded')\n    // changePlaceSelect([])\n    // setSelectedRows([])\n  // }, [fuelprices])\n\n\n  return(\n    <ThemeProvider theme={customTheme}>\n    <MUIDataTable\n      data={fuelprices}\n      columns={columns(props.selected)}\n      options = {options(props.selected,selectedRows,fuelprices,changePlaceSelect, setSelectedRows)} \n    />\n    </ThemeProvider>\n  )}\n\nexport default DataTable\n\n\n\n","import React, { useEffect } from 'react';\nimport ChooseMultiCategory from './category_radio_buttons.js';\nimport ChooseMultiTime from './time_radio_buttons.js';\nimport Chart from './timeseries';\nimport Col from 'react-bootstrap/Col';\nimport DataTable from './data_table.js';\nimport { editPlaceSelect } from './api_fetcher.js';\n\nfunction ToggleView(props) {\n  const placeSelect = editPlaceSelect();\n  const changeTable = () => {\n    props.changeOrGetSelected(true)\n    if (props.changeOrGetDataView()==='graph') {props.changeOrGetDataView(true)}\n  }\n\n  const changeData = () => {\n    if (placeSelect().length === 0) {\n      alert('You have not selected anything!')\n    } else {\n      props.changeOrGetDataView(true)}\n  }\n  \n  const scrollToRef = (ref) => {window.scrollTo({\n    top: ref.current.offsetTop,\n    left: 0, \n    behaviour: \"smooth\"}); \n  }\n\n  useEffect(() => {\n    scrollToRef(props.headerRef)\n  },[])\n\n  return (\n    <>\n      <div className = \"searchContainer\" >\n        <div className = \"filterHeaders\" >\n          {props.changeOrGetSelected()==='none' ? <ChooseMultiTime /> : console.log('not rendering time')}\n          {props.changeOrGetSelected()==='none' ? <ChooseMultiCategory /> : console.log('not rendering cat')}\n        </div>\n      </div>          \n      <div className=\"ViewContainer\">\n        {props.changeOrGetDataView()==='table' ? <DataTable selected={props.changeOrGetSelected()}/> : <Chart />}\n        <Col>\n          <button className='ChangeView' onClick={() => changeTable()}>{ props.changeOrGetSelected()==='none' ? 'View Time Graph' : 'Back to Table' }</button>\n          <button className='ChangeView' onClick={() => changeData()} style={{ display: props.changeOrGetSelected()=== \"none\" ? \"none\" : \"block\" }}\n          >{props.changeOrGetDataView()==='table' ? 'View Graph of Selected Companies' : 'Back to Selection Page'}</button>\n        </Col>\n      </div>\n    </>\n  )\n    }\n\n\nexport default ToggleView","import React from 'react';\n\n  \n\nfunction WelcomePage() {\n    return (\n        <div>\n            <h1>Hello! What would you like to view?</h1>\n        </div>\n    )\n\n}\n\n\nexport default WelcomePage","import React from \"react\";\n\nfunction PageNotFound() {\n    return (\n        <div>\n            <h1>ERROR 404: Page not found!</h1>\n        </div>\n    )\n};\n\nfunction About() {\n    return (\n        <div>\n            <p>\n                We constructed this website not only to learn more about front and backend development, but specifically how to \n                implement such skills in a realistic environment, such as a Website.\n            </p>\n        </div>\n    )\n\n}\n\nexport { PageNotFound, About }","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nfunction Navbar(props) {\n    return (\n        <div className='Navigation-bar'>\n            <NavLink to='/'><button className='navlink'>Home</button></NavLink>\n            <NavLink to='fuelview' ref={props.headerRef} className='navlink'><button className='navlink'>Fuel Prices</button></NavLink>\n            <NavLink to='/about'><button className='navlink'>About</button></NavLink>\n        </div>\n    )\n}\n\nexport default Navbar","import React, { useState, useRef } from 'react';\nimport { ApiProvider } from './components/api_fetcher';\nimport ToggleView from './components/fuelview';\nimport WelcomePage from './components/welcome_page';\nimport { PageNotFound, About } from './components/misc_pages';\nimport Navbar from './components/header';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from 'react-router-dom'; //for the links\nimport './App.css';\n\n\nfunction App() {\n  document.title = \"PriceTracker\"\n  const [dataview, setDataView] = useState('table')\n  const [selected, selectedEnable] = useState('none')\n  const headerRef = useRef(null)\n\n  const changeOrGetSelected = (change=false) => {\n    if (change) {selectedEnable(selected === 'none' ? 'multiple' : 'none')}\n    return selected\n  }\n\n  const changeOrGetDataView = (change=false) => {\n    if (change) {setDataView(dataview==='table' ? 'graph' : 'table')}\n    return dataview\n  }\n\n  return ( \n    <Router>\n      <h1 className='Title'>PriceTracker</h1>\n      <div className=\"App\">\n      <ApiProvider dataMode={selected} dataView={dataview}> \n      <Navbar headerRef={headerRef}/>\n        <div className=\"Content\">\n          <Routes>\n            <Route exact path=\"/\" element={<WelcomePage />} />\n            <Route path=\"/fuelview\" element={\n              <>\n                <h1>Table of all prices recorded this month</h1>          \n                <ToggleView changeOrGetDataView={changeOrGetDataView} \n                changeOrGetSelected={changeOrGetSelected} headerRef={headerRef}/> \n              </>\n              } />\n            <Route path=\"/about\" element={<About />} />\n            <Route element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </ApiProvider> \n    </div>\n  </Router>\n  \n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor\"\n      crossOrigin=\"anonymous\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n    />\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}