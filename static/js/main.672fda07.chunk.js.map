{"version":3,"sources":["components/api_fetcher.js","components/category_radio_buttons.js","components/time_radio_buttons.js","components/timeseries.js","components/data_table.js","components/fuelview.js","components/welcome_page.js","components/misc_pages.js","components/header.js","App.js","reportWebVitals.js","index.js"],"names":["ApiContext","createContext","ChangeDateMode","ChangeProduct","GraphContext","ChangeGraph","PlaceSelect","EditPlaceSelect","neo4j","require","console","log","process","driver","auth","basic","ApiProvider","_ref","children","dataMode","_useState","useState","_useState2","Object","slicedToArray","dateMode","setDateMode","_useState3","_useState4","product","setProduct","_useState5","_useState6","fuelprices","setPrices","_useState7","_useState8","graphData","setGraphData","_useState9","_useState10","placeSelect","setPlaceSelect","getDate","num","date","Date","setDate","day","month","getMonth","year","getFullYear","concat","fetchFuels","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","link","session","result","wrap","_context","prev","next","run","sent","records","map","record","toObject","close","stop","_x","apply","this","arguments","getPlaceLink","place_string","fetchPlacePrices","_ref3","_callee2","getAllPrices","x","final_array","_context2","Promise","all","fetch","then","response","json","forEach","company","row","push","parseDate","brand","address","price","useEffect","dateStr","sign","linkGenerator","react_default","a","createElement","Provider","value","num_list","ChooseMultiCategory","updateCat","useContext","FormControl","className","FormLabel","id","RadioGroup","aria-labelledby","name","defaultValue","onChange","e","FormControlLabel","control","Radio","label","ChooseMultiTime","updateDateMode","ReactFC","fcRoot","FusionCharts","TimeSeries","Chart","linedata","timeseries","type","renderAt","width","height","dataSource","chart","caption","text","subCaption","series","yaxis","plot","title","format","suffix","data","DataStore","createDataTable","ReactFC_default","customTheme","createTheme","overrides","MUIDataTableFilter","root","minWidth","MUIDataTableFilterList","chip","marginRight","columns","selected","options","filter","sort","display","customBodyRender","selectedRows","changePlaceSelect","setSelectedRows","selectableRows","download","search","print","viewColumns","rowsSelected","selectToolbarPlacement","customToolbarSelect","onRowSelectionChange","currSelectedRow","allSelectedRows","allRowIndexes","placeIndex","dataIndex","place_id","draggableColumns","enabled","DataTable","props","ThemeProvider","theme","dist_default","ToggleView","loadGraphData","ref","headerRef","window","scrollTo","top","current","offsetTop","left","behaviour","Fragment","changeOrGetSelected","time_radio_buttons","category_radio_buttons","changeOrGetDataView","data_table","components_timeseries","Col","onClick","length","alert","style","WelcomePage","PageNotFound","About","Navbar","react_router_dom","to","App","document","dataview","setDataView","selectedEnable","useRef","header","react_router","exact","path","element","welcome_page","fuelview","undefined","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","rel","href","integrity","crossOrigin","src_App"],"mappings":"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","file":"static/js/main.672fda07.chunk.js","sourcesContent":["//use function with usestate/useeffect hook\nimport React, { useState, createContext, useContext, useEffect } from 'react';\nimport { parseDate } from \"fusioncharts/utils\" \n\nconst ApiContext = createContext(); \nconst ChangeDateMode = createContext();\nconst ChangeProduct = createContext()\nconst GraphContext = createContext()\nconst ChangeGraph = createContext()\nconst PlaceSelect = createContext();\nconst EditPlaceSelect = createContext();\n\n\nfunction useApiContext() {\n    return useContext(ApiContext)\n}\n\nfunction changeDateMode(){\n    return useContext(ChangeDateMode)\n}\n\nfunction changeProduct(){\n    return useContext(ChangeProduct)\n}\n\n\nfunction useGraphContext() {\n    return useContext(GraphContext)\n}\n\nfunction useEditGraph() {\n    return useContext(ChangeGraph)\n}\n\nfunction usePlaceSelect() {\n    return useContext(PlaceSelect)\n}\n\nfunction editPlaceSelect() {\n    return useContext(EditPlaceSelect)\n}\n\nconst neo4j = require(\"neo4j-driver\");\nconst uri = process.env.REACT_APP_URI\nconst usr = process.env.REACT_APP_USR\nconst password = process.env.REACT_APP_PASSWORD\nconsole.log(process.env.NODE_ENV)\nconst driver = neo4j.driver(uri, neo4j.auth.basic(usr, password));\n\n\n\nfunction ApiProvider({ children, dataMode }) {\n    const [dateMode, setDateMode] = useState('tdy');\n    const [product, setProduct] = useState('UnleadedPetrol')\n    const [fuelprices, setPrices] = useState([]);\n    const [graphData, setGraphData] = useState([]);\n    const [placeSelect, setPlaceSelect] = useState([]);\n    \n    const getDate = (num) => {\n        const date = new Date();\n        date.setDate(date.getDate()-num);\n        const day = date.getDate();\n        const month = date.getMonth() + 1;\n        const year = date.getFullYear();\n        return `${year}-${month}-${day}`\n        \n    }\n\n    const linkGeneratorPlace = () => {\n        return `MATCH (b:Brand)-->(p:Place)<--(l:Location)\n        RETURN b.brand AS brand,p.address AS address,l.location AS location`\n\n    }\n\n    const linkGenerator = (dateStr,product) => {\n        // date can be tdy, tmr, or all\n        //product is 98ERON, E85, UnleadedPetrol\n        var date = ''\n        var sign = '='\n        switch (dateStr) {\n            case 'tdy':\n                date = getDate(0);\n                break;\n            case 'tmr':\n                date = getDate(-1);\n                break;\n            default:\n                date=getDate(30);\n                sign = '>'\n        };\n        console.log(`Date: ${date}`)\n        return `MATCH (d:DATE_${product})-[pr:PRICED_AT]->(p:Place)\n        WHERE d.date ${sign} '${date}'\n        MATCH (b:Brand)-->(p:Place)<--(l:Location)\n        RETURN b.brand AS brand,p.address AS address,p.phone AS phone,p.description AS description,l.location AS location\n        ,pr.price AS price,d.date AS date`\n\n    }\n\n    // const changeDateForFusion = (date) => {\n    //     const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n    //         \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n    //         ];\n    //     var d = new Date(date)\n    //     const day = d.getDate();\n    //     const month = monthNames[d.getMonth()];\n    //     const year = d.getFullYear();\n    //     return `${day}-${month}-${year}`\n    // }\n\n    const changePlaceSelect = (num_list) => {\n        setPlaceSelect(num_list)\n    }\n\n\n    const fetchFuels = async (link) => {\n        const session = driver.session();\n        const result = await session.run(link)\n        await setPrices(result.records.map(record => record.toObject()))\n        await session.close()\n    };\n\n    const getPlaceLink = (num) => {\n        const place_string = (`http://127.0.0.1:8000/api/price/address_id=${num}/`)\n        console.log(`Fetching from ${place_string}`)\n        return place_string\n    }\n\n    const fetchPlacePrices = async () => {\n        const getAllPrices = () => {\n            return Promise.all(placeSelect.map(num => {\n                return fetch(getPlaceLink(num))\n                .then(response => response.json())\n            })) \n        }\n        var x = await getAllPrices()\n        var final_array = []\n        x.forEach(company => {\n            company.forEach(row => {\n                final_array.push([parseDate(row.date, '%Y-%m-%d'), (`${row.brand} - ${row.address}`), row.price])\n            })\n        })\n        console.log(final_array)\n        setGraphData(final_array)\n\n    };\n    \n\n    // fetchFuels(1);\n    useEffect(() => {\n        console.log('Data Reloaded')\n        if (dataMode==='multiple') {\n            fetchFuels(linkGeneratorPlace())\n        } else {\n            fetchFuels(linkGenerator(dateMode,product))\n        }\n        // then(link => fetchFuels(link))\n       \n    },[dataMode,product,dateMode]); //acts as component did mount, only executes once on launch\n\n    \n    return (\n        <ApiContext.Provider value = { fuelprices }>\n        <ChangeDateMode.Provider value = { setDateMode }>\n        <ChangeProduct.Provider value = { setProduct }>\n        <GraphContext.Provider value = {graphData}>\n        <ChangeGraph.Provider value = {fetchPlacePrices}>\n        <PlaceSelect.Provider value={placeSelect}>\n        <EditPlaceSelect.Provider value={changePlaceSelect}>\n            { children }\n        </EditPlaceSelect.Provider>\n        </PlaceSelect.Provider>\n        </ChangeGraph.Provider>\n        </GraphContext.Provider>\n        </ChangeProduct.Provider>\n        </ChangeDateMode.Provider>\n        </ApiContext.Provider>\n    );\n\n}\n\n\n  export { ApiProvider, useApiContext, changeDateMode, changeProduct, useGraphContext, useEditGraph, usePlaceSelect, editPlaceSelect }\n","import React from 'react';\nimport { changeProduct } from './api_fetcher';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nfunction ChooseMultiCategory() {\n    const updateCat = changeProduct();\n    const changeFilter = (product) => {\n        updateCat(product);\n    }\n    return (\n        <FormControl className='catRadio'>\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">Petrol type to filter by</FormLabel>\n            <RadioGroup\n                row\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                name=\"row-radio-buttons-group\"\n                defaultValue='UnleadedPetrol'\n                onChange={(e,value) => changeFilter(value)}\n            >\n                <FormControlLabel value=\"UnleadedPetrol\" control={<Radio />} label=\"Unleaded Petrol\" />\n                <FormControlLabel value=\"E85\" control={<Radio />} label=\"E85\" />\n                <FormControlLabel value=\"98RON\" control={<Radio />} label=\"98 RON\" />\n            </RadioGroup>\n        </FormControl>\n    )\n}\n\nexport default ChooseMultiCategory","import React from 'react';\nimport { changeDateMode } from './api_fetcher';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nfunction ChooseMultiTime() {\n    const updateDateMode = changeDateMode();\n    const changeFilter = (filter) => {\n        updateDateMode(filter);\n    }\n\n    return (\n        <div className='timeRadio'>\n        <FormControl>\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">Choose which data to view</FormLabel>\n            <RadioGroup\n                row\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                defaultValue='tdy'\n                name=\"row-radio-buttons-group\"\n                onChange={(e,value) => changeFilter(value)}\n            >\n                <FormControlLabel value={'tdy'} control={<Radio />} label=\"Today\" />\n                <FormControlLabel value={'tmr'} control={<Radio />} label=\"Tomorrow\" />\n            </RadioGroup>\n        </FormControl>\n        </div>\n    )\n}\n\nexport default ChooseMultiTime","import React from \"react\";\nimport FusionCharts from \"fusioncharts\";\nimport TimeSeries from \"fusioncharts/fusioncharts.timeseries\";\nimport ReactFC from 'react-fusioncharts';\nimport { useGraphContext } from './api_fetcher.js'\n\n// https://www.fusioncharts.com/fusiontime/examples/plotting-multiple-series-on-time-axis?framework=react\n// fusion charts is so annoying to use\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\nfunction Chart() {\n    const linedata = useGraphContext();//fuel data\n    const schema = [{\n        name: \"Time\",\n        type: \"date\",\n        format: \"%Y-%m-%d\"\n      }, {\n        name: \"Fuel Station\",\n        type: \"string\"\n      }, {\n        name: \"Price\",\n        type: \"number\"\n      }]\n    console.log(linedata) \n    const fusionTable = new FusionCharts.DataStore().createDataTable(\n        linedata,\n        schema\n      );\n    const dataSource =  {\n        chart: {},\n        caption: {text: \"Fuel Prices for each day\"},\n        subCaption: {text: \"See how much the fuel prices change day to day\"},\n        series: \"Type\",\n        yaxis: [\n            {\n              plot: \"Cents per Litre\",\n              title: \"c/L\",\n              format: {\n                suffix: \"c/L\"\n              }\n            }\n          ],\n        data: fusionTable\n    };\n    \n    const timeseries = {\n        type: \"timeseries\",\n        renderAt: \"container\",\n        width: \"600\",\n        height: \"400\",\n        dataSource\n    };\n    console.log(timeseries)\n    return (\n        <ReactFC {...timeseries} />\n\n    )\n}\n\n\nexport default Chart;","import React, { useState, useEffect } from \"react\"\nimport MUIDataTable from \"mui-datatables\";\nimport { editPlaceSelect, useApiContext } from \"./api_fetcher\";\nimport { styled, createTheme, ThemeProvider } from \"@mui/material\";\n\nconst customTheme = createTheme({\n  overrides: {\n    MUIDataTableFilter: {\n      root: {\n        minWidth: '20vw',  // Adjust the width as needed\n      },\n    },\n    MUIDataTableFilterList: {\n      chip: {\n        marginRight: '8px',  // Adjust the margin as needed\n      },\n    },\n  },\n});\n\nconst columns = (selected) => {\n  return ([\n    {\n      name: \"brand\",\n      label: \"Brand\",\n      options: {\n      filter: true,\n      sort: true,\n      }\n    },\n    {\n      name: \"date\",\n      label: \"Date\",\n      options: {\n      display: false,\n      filter: false,\n      sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n      filter: false,\n      sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n      filter: true,\n      sort: true,\n      }\n    },\n    {\n      name: \"price\",\n      label: \"Price\",\n      options: {\n      display: (selected === 'none' ? true : false),\n      filter: false,\n      sort: true,\n      customBodyRender: value => <span>{value}c/L</span>\n      }\n    },\n    {\n      name: \"description\",\n      label: \"Description\",\n      options: {\n      display: (selected === 'none' ? true : false),\n      filter: false,\n      sort: false,\n      }\n    },\n  ])};\n\nconst options = (selected, selectedRows,fuelprices,changePlaceSelect, setSelectedRows) => {\n  return ({\n  selectableRows: selected, \n  download: false,\n  search: true,\n  print: false, \n  viewColumns: false,\n  filter: true,\n  rowsSelected: selectedRows,\n  selectToolbarPlacement: 'above',\n  customToolbarSelect: () => {},\n  onRowSelectionChange: (currSelectedRow,allSelectedRows,allRowIndexes) => {\n    var placeIndex = []\n    setSelectedRows(allSelectedRows.map(row => {\n      placeIndex.push(fuelprices[row.dataIndex].place_id)\n      return row.dataIndex\n    }));\n    console.log(placeIndex)\n    changePlaceSelect(placeIndex)\n  },\n  draggableColumns: {\n    enabled: true,\n  },\n  })}\n\nfunction DataTable(props) {\n  const fuelprices = useApiContext()\n  const [selectedRows, setSelectedRows] = useState([]);\n  const changePlaceSelect = editPlaceSelect();\n\n  useEffect(() => {\n    console.log('Table reloaded')\n    changePlaceSelect([])\n    setSelectedRows([])}, fuelprices)\n\n\n  return(\n    <ThemeProvider theme={customTheme}>\n    <MUIDataTable\n      data={fuelprices}\n      columns={columns(props.selected)}\n      options = {options(props.selected,selectedRows,fuelprices,changePlaceSelect, setSelectedRows)} \n    />\n    </ThemeProvider>\n  )}\n\nexport default DataTable\n\n\n\n","import React, { useEffect } from 'react';\nimport ChooseMultiCategory from './category_radio_buttons.js';\nimport ChooseMultiTime from './time_radio_buttons.js';\nimport Chart from './timeseries';\nimport Col from 'react-bootstrap/Col';\nimport DataTable from './data_table.js';\nimport { usePlaceSelect, useEditGraph } from './api_fetcher.js';\n\nfunction ToggleView(props) {\n  const placeSelect = usePlaceSelect();\n  const loadGraphData = useEditGraph();\n  const changeTable = () => {\n    props.changeOrGetSelected(true)\n    if (props.changeOrGetDataView()==='graph') {props.changeOrGetDataView(true)}\n  }\n\n  const changeData = () => {\n    if (placeSelect.length === 0) {\n      alert('You have not selected anything!')\n    } else {\n      loadGraphData()\n      props.changeOrGetDataView(true)}\n  }\n  \n  const scrollToRef = (ref) => {window.scrollTo({\n    top: ref.current.offsetTop,\n    left: 0, \n    behaviour: \"smooth\"}); \n  }\n\n  useEffect(() => {\n    scrollToRef(props.headerRef)\n  },[])\n\n  return (\n    <>\n      <div className = \"searchContainer\" >\n        <div className = \"filterHeaders\" >\n          {props.changeOrGetSelected()==='none' ? <ChooseMultiTime /> : console.log('not rendering time')}\n          {props.changeOrGetSelected()==='none' ? <ChooseMultiCategory /> : console.log('not rendering cat')}\n        </div>\n      </div>          \n      <div className=\"ViewContainer\">\n        {props.changeOrGetDataView()==='table' ? <DataTable selected={props.changeOrGetSelected()}/> : <Chart />}\n        <Col>\n          <button className='ChangeView' onClick={() => changeTable()}>{ props.changeOrGetSelected()==='none' ? 'View Time Graph' : 'Back to Table' }</button>\n          <button className='ChangeView' onClick={() => changeData()} style={{ display: props.changeOrGetSelected()=== \"none\" ? \"none\" : \"block\" }}\n          >{props.changeOrGetDataView()==='table' ? 'View Graph of Selected Companies' : 'Back to Selection Page'}</button>\n        </Col>\n      </div>\n    </>\n  )\n    }\n\n\nexport default ToggleView","import React from 'react';\n\n  \n\nfunction WelcomePage() {\n    return (\n        <div>\n            <h1>Hello! What would you like to view?</h1>\n        </div>\n    )\n\n}\n\n\nexport default WelcomePage","import React from \"react\";\n\nfunction PageNotFound() {\n    return (\n        <div>\n            <h1>ERROR 404: Page not found!</h1>\n        </div>\n    )\n};\n\nfunction About() {\n    return (\n        <div>\n            <p>\n                We constructed this website not only to learn more about front and backend development, but specifically how to \n                implement such skills in a realistic environment, such as a Website.\n            </p>\n        </div>\n    )\n\n}\n\nexport { PageNotFound, About }","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nfunction Navbar(props) {\n    return (\n        <div className='Navigation-bar'>\n            <NavLink to='/'><button className='navlink'>Home</button></NavLink>\n            <NavLink to='fuelview' ref={props.headerRef} className='navlink'><button className='navlink'>Fuel Prices</button></NavLink>\n            <NavLink to='/about'><button className='navlink'>About</button></NavLink>\n        </div>\n    )\n}\n\nexport default Navbar","import React, { useState, useRef } from 'react';\nimport { ApiProvider } from './components/api_fetcher';\nimport ToggleView from './components/fuelview';\nimport WelcomePage from './components/welcome_page';\nimport { PageNotFound, About } from './components/misc_pages';\nimport Navbar from './components/header';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from 'react-router-dom'; //for the links\nimport './App.css';\n\n\nfunction App() {\n  document.title = \"PriceTracker\"\n  const [dataview, setDataView] = useState('table')\n  const [selected, selectedEnable] = useState('none')\n  const headerRef = useRef(null)\n\n  const changeOrGetSelected = (change=false) => {\n    if (change) {selectedEnable(selected === 'none' ? 'multiple' : 'none')}\n    return selected\n  }\n\n  const changeOrGetDataView = (change=false) => {\n    if (change) {setDataView(dataview==='table' ? 'graph' : 'table')}\n    return dataview\n  }\n\n  return ( \n    <Router>\n      <h1 className='Title'>PriceTracker</h1>\n      <div className=\"App\">\n      <ApiProvider dataMode={selected}> \n      <Navbar headerRef={headerRef}/>\n        <div className=\"Content\">\n          <Routes>\n            <Route exact path=\"/\" element={<WelcomePage />} />\n            <Route path=\"/fuelview\" element={\n              <>\n                <h1>Table of all prices recorded this month</h1>          \n                <ToggleView changeOrGetDataView={changeOrGetDataView} \n                changeOrGetSelected={changeOrGetSelected} headerRef={headerRef}/> \n              </>\n              } />\n            <Route path=\"/about\" element={<About />} />\n            <Route element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </ApiProvider> \n    </div>\n  </Router>\n  \n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor\"\n      crossOrigin=\"anonymous\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n    />\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}